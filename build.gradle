import java.time.Instant
import java.time.ZoneOffset
import java.time.format.DateTimeFormatter

apply plugin: 'groovy'
apply plugin: 'org.apache.grails.gradle.grails-plugin'
apply plugin: 'org.apache.grails.gradle.grails-publish'

group = 'org.grails.plugins'

repositories {
    mavenCentral()
    maven { url = 'https://repo.grails.org/grails/restricted' }
    maven {
        url = 'https://repository.apache.org/content/groups/snapshots'
        content {
            includeVersionByRegex('org[.]apache[.](grails|groovy).*', '.*', '.*-SNAPSHOT')
        }
    }
}

ext {
    buildInstant = java.util.Optional.ofNullable(System.getenv("SOURCE_DATE_EPOCH"))
            .filter(s -> !s.isEmpty())
            .map(Long::parseLong)
            .map(Instant::ofEpochSecond)
            .orElseGet(Instant::now) as Instant
    formattedBuildDate = DateTimeFormatter.ISO_INSTANT.format(buildInstant)
    buildDate = buildInstant.atZone(ZoneOffset.UTC) // for reproducible builds
}

dependencies {
    compileOnly 'org.springframework.boot:spring-boot-starter-logging'
    compileOnly 'org.springframework.boot:spring-boot-starter-validation'
    compileOnly 'org.springframework.boot:spring-boot-autoconfigure'
    compileOnly 'org.apache.grails:grails-core'
    testImplementation 'org.apache.grails:grails-testing-support-web'
}

java {
    withSourcesJar()
    withJavadocJar()
    sourceCompatibility = JavaVersion.toVersion(javaVersion)
}

tasks.withType(Test).configureEach {
    useJUnitPlatform()
    testLogging {
        events 'failed'
        exceptionFormat 'full'
    }
}
groovydoc {
    excludes = ['**/*GrailsPlugin.groovy', '**/Application.groovy']
}

grailsPublish {
    githubSlug = 'grails-plugins/i18n-enums'
    license {
        name = 'Apache-2.0'
    }
    title = 'I18n-Enums Plugin'
    desc = 'Adds an annotation usable on Enums to easy add and implement the MessageSourceResolvable interface in an standard way throughout a grails project.'
    developers = [
            sbglasius   : 'SÃ¸ren Berg Glasius',
            burtbeckwith: 'Burt Beckwith',
            jdaugherty  : 'James Daugherty',
            bkoehm      : 'Brian Koehmstedt'
    ]
}

compileJava.options.release = javaVersion.toInteger()

apply from: layout.projectDirectory.file('gradle/docs-config.gradle')
